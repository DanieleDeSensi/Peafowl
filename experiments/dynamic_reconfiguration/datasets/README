****************************************************************
*                     Datasets description                     *
****************************************************************

=====================================
==== DATAMARKET_Europe_5_raw.csv ====
=====================================
Obtained from: https://datamarket.com/data/set/232n/internet-traffic-data-in-bits-from-a-private-isp-with-centres-in-11-european-cities-the-data-corresponds-to-a-transatlantic-link-and-was-collected-from-0657-hours-on-7-june-to-1117-hours-on-31-july-2005-data-collected-at-five-minute-intervals#!ds=232n&display=line

Internet traffic data (in bits) from a private ISP with centres in 11 European cities. The data corresponds to a transatlantic link and was collected from 06:57 hours on 7 June to 11:17 hours on 31 July 2005. Data collected at five minute intervals.

Use datamarket_convert.py to convert it to the format used by Peafowl.

+ One sample every 5 minutes. 
+ A sample is the number of bits in a 5 minutes interval. 
+ 24 hours duration.

====================================================
==== CAIDA_2015_CHICAGO_A_02012016_03012016.png ====
====================================================
Obtained from: http://www.caida.org/data/realtime/passive/?monitor=equinix-chicago-dirA

This passive network monitor is connected to an OC192 link between Chicago, IL and Seattle, WA. See the equinix-chicago monitor description page for more details. Direction A. 

+ One sample every 5 minutes. 
+ Each sample is the number of packets per second in that interval. 
+ 24 hours duration (between 02/01/2016 and 03/01/2016). 

==========================================
==== LINKX_NoVa_02012016_03012016.csv ====
==========================================
Obtained from: https://stats.linx.net/

LINX NoVA is available at three different datacenters in Northern Virginia/USA. It is a VPLS network build using Juniper MX960 routers in each of the three sites.

+ One sample every 5 minutes. 
+ Each sample is the number of packets per second in that interval.
+ 24 hours duration (between 02/01/2016 and 03/01/2016).

================================================
==== LINKX_Manchester_02012016_03012016.csv ====
================================================
Obtained from: https://stats.linx.net/

IXManchester is currently present in 4 different datacenters and build using Extreme Networks X670/460 series switches.

+ One sample every 5 minutes. 
+ Each sample is the number of packets per second in that interval.
+ 24 hours duration (between 02/01/2016 and 03/01/2016).

===========================
==== rates_PDP2015.csv ====
=========================== 
Dataset used for PDP2015 paper.

+ One sample every second. 
+ A sample is the number of packets in that second.
+ 1 hour duration.

****************************************************************
*                  Figure to .csv conversion                   *
****************************************************************
To convert image to .csv, we used http://arohatgi.info/WebPlotDigitizer/app/.
It works by specifying 2 points on the X axis and 2 points on the Y axis. Then we will specify the values of these points to let the algorithm understand the scale of the plot. For example, if we put an X point over the 20:00 and the other X point over the 02:00, then we will say that 20:00 corresponds to value 20 and 02:00 corresponds to value 26. Accordingly, each X unit will correspond to a 1 hour duration.

We use the X-step algorithm to get the data. The values of the algorithm should be specified in the following way:

+ X_min: The minimum X value that we want to get (Set it below the minimum real value).
+ ΔX Step: This is the step of the X values, it should be set such to have one point for each sample. For example, if we have a dataset with a sample every 5 minutes, and we have that each X unit is one hour, then we need to find a ΔX such to corrsponds to 5 minutes. In our case, we have  ΔX = 1/(1 hour / 5 minutes) = 5minutes / 60minutes = 0,083333333
+ X_max: The maximum X value that we want to get (Set it above the minimum real value).
+ Y_min: The minimum Y value that we want to get (Set it below the minimum real value).
+ Y_max: The maximum Y value that we want to get (Set it above the minimum real value).
Line width: ?
